#!/usr/bin/env python
import sys, socket

# Global Variables
server_port = ('login-faculty.ccs.neu.edu', 3700)
basil_id = '001196523'
hussein_id = '001923995'

# Class representing the server info we want to connect with
class Server(object):
    def __init__(self, port, host, neu_id):
        self.port = port
        self.host = host
        self.neu_id = neu_id


# Parse server info 
def _server_info(data):
    if data[0] == '-p':
        return Server(data[1], data[2], data[3])
    elif len(data) == 2:
        return Server(3700, data[0], data[1])
    else:
        print 'Incorrect information, must provide host and ID and an optional port with -p'
        exit()


def _server_connect(server):
    # Create streaming socket
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((server.host, server.port))
    print 'Connected to server: ' + server.host
    msg = s.recv(1024)
    print msg
    s.send('IAM ' + server.neu_id + '\n')

    not_done = True
    msg_wait = False 
    while not_done:
        # Receive message
        msg = s.recv(1024)

        # Wait for whole message
        if '\n' not in msg:
            msg_wait = True
            continue

        # Reconstruct message
        if msg_wait:
            msg = 'INFO' + msg
            msg_wait = False

        # Split the message
        print msg
        msg = msg.split()
       
        if msg[0] == 'INFO':
            # Reply to server
            reply = 'REPLY ' + msg[1] + '\n'
            print reply
            s.send(reply)
        elif msg[0] == 'NULL':
            print 'GOT NULL '
            print msg
            exit()
        elif msg[0] == 'KEY':
            print msg
            not_done = False
        else:
            print 'incorrect form of message '
            print msg
            exit()

    s.close()

if __name__ == '__main__':
    args = sys.argv[1:]
    server = _server_info(args)
    _server_connect(server)


